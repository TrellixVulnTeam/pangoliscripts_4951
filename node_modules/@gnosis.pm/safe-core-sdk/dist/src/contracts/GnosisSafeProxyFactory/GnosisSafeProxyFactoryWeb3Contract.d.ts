import { ProxyFactory as ProxyFactory_V1_1_1 } from '../../../typechain/src/web3-v1/v1.1.1/proxy_factory';
import { ProxyFactory as ProxyFactory_V1_3_0 } from '../../../typechain/src/web3-v1/v1.3.0/proxy_factory';
import GnosisSafeProxyFactoryContract, { CreateProxyProps } from './GnosisSafeProxyFactoryContract';
declare class GnosisSafeProxyFactoryWeb3Contract implements GnosisSafeProxyFactoryContract {
    contract: ProxyFactory_V1_3_0 | ProxyFactory_V1_1_1;
    constructor(contract: ProxyFactory_V1_3_0 | ProxyFactory_V1_1_1);
    getAddress(): string;
    createProxy({ safeMasterCopyAddress, initializer, saltNonce, options }: CreateProxyProps): Promise<string>;
    encode(methodName: string, params: any[]): string;
}
export default GnosisSafeProxyFactoryWeb3Contract;
