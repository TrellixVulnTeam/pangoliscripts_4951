import { TransactionResponse } from '@ethersproject/abstract-provider';
import { Signer } from '@ethersproject/abstract-signer';
import { BigNumber } from '@ethersproject/bignumber';
import { Contract } from '@ethersproject/contracts';
import { Provider } from '@ethersproject/providers';
import { SafeVersion } from '../contracts/config';
import GnosisSafeContractEthers from '../contracts/GnosisSafe/GnosisSafeContractEthers';
import GnosisSafeProxyFactoryEthersContract from '../contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract';
import MultiSendEthersContract from '../contracts/MultiSend/MultiSendEthersContract';
import { AbiItem } from '../types';
import EthAdapter, { EthAdapterTransaction, GetSafeContractProps } from './EthAdapter';
export interface EthersAdapterConfig {
    /** ethers - Ethers v5 library */
    ethers: any;
    /** signer - Ethers signer */
    signer: Signer;
}
declare class EthersAdapter implements EthAdapter {
    #private;
    constructor({ ethers, signer }: EthersAdapterConfig);
    getProvider(): Provider;
    getSigner(): Signer;
    isAddress(address: string): boolean;
    getBalance(address: string): Promise<BigNumber>;
    getChainId(): Promise<number>;
    getSafeContract({ safeVersion, chainId, isL1SafeMasterCopy, customContractAddress }: GetSafeContractProps): GnosisSafeContractEthers;
    getMultiSendContract(safeVersion: SafeVersion, chainId: number, customContractAddress?: string): MultiSendEthersContract;
    getSafeProxyFactoryContract(safeVersion: SafeVersion, chainId: number, customContractAddress?: string): GnosisSafeProxyFactoryEthersContract;
    getContract(address: string, abi: AbiItem[]): Contract;
    getContractCode(address: string): Promise<string>;
    getTransaction(transactionHash: string): Promise<TransactionResponse>;
    getSignerAddress(): Promise<string>;
    signMessage(message: string): Promise<string>;
    estimateGas(transaction: EthAdapterTransaction): Promise<number>;
    call(transaction: EthAdapterTransaction): Promise<string>;
}
export default EthersAdapter;
